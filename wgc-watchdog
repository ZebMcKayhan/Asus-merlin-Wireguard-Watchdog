#!/bin/sh 

# Must be called with interface, i.e
# wgc-watchdog 1

IF=wgc$1

ENABLED=$(nvram get "$IF"_enable)
if [ -z "$1" ] || [ -z "$ENABLED" ] || [ "$ENABLED" -ne "1" ] ; then
   logger -t $(basename $0) "Interface $IF not found or not enabled - exiting"
   echo "Interface $IF not found or not enabled - exiting"
   echo " "
   echo "usage:"
   echo "/jffs/scripts/wgc-watchdog 2              - check wgc2 by ping 8.8.8.8"
   echo "/jffs/scripts/wgc-watchdog 3              - check wgc3 by ping 8.8.8.8"
   echo "/jffs/scripts/wgc-watchdog 2 192.168.2.1  - check wgc2 by ping 192.168.2.1"
   echo " "
   exit 0
fi

# custom ping target ip?
if [ -z "$2" ] ; then
   IP_PING=8.8.8.8 #if nothing given
else
   IP_PING=$2
fi

wg_failed=0
##########################################
# check handshake timer
########################
# if no contact, restart wireguard!
# (if no contact in 60min reboot router)

#Get amount of seconds since last handshake:
last_handshake=`wg show $IF latest-handshakes | awk '{print $2}'`

if [ -z "$last_handshake" ] ; then # if variable is empty
   logger -t $(basename $0) "Wireguard seems disconnected - restarting $IF"
   echo "Wireguard seems disconnected - restarting $IF"
   wg_failed=1
fi

idle_seconds=$((`date +%s`-${last_handshake}))

if [ "$idle_seconds" -gt "200" ] ; then
   logger -t $(basename $0) "Wireguard handshake failed - restarting $IF"
   echo "Wireguard handshake failed - restarting $IF"
   wg_failed=1
else
   echo "Wireguard $IF handshake ok!"
fi

##########################################
#       Ping Test
###################
# methode 1 - add temporary vpndirector rule:
IF_IP=$(nvram get "$IF"_addr | cut -d '/' -f1)
ip rule add from $IF_IP lookup $IF prio 10
# method2 2 - set rp_filter temporary to loose:
#PREV_RPFILT=$(cat /proc/sys/net/ipv4/conf/"$IF"/rp_filter)
#echo "Original rp_filter value is: $PREV_RPFILT"
#CHANGED=0
#if [ $PREV_RPFILT -eq "1" ] ; then
#   echo 2 > /proc/sys/net/ipv4/conf/"$IF"/rp_filter
#   CHANGED=1
#fi

tries=0
while [[ $tries -lt 5 ]]
   do
      ping -I $IF -c 1 -w 1 $IP_PING >/dev/null 2>&1
      if [ $? -eq "0" ]
      then
         break #if successful, no need to continue
      fi
   tries=$(( $tries + 1 ))
   done
if [ "$tries" -eq "5" ] #if we failed all 5 times
then
   logger -t $(basename $0) "Ping failed - restarting $IF"
   echo "Ping failed - restarting $IF"
   wg_failed=1
else
   echo "Ping via $IF succeeded!"
fi

# methode 1 - restore
ip rule del prio 10

# methode 2 - restore:
#if [ $CHANGED -eq "1" ] ; then
#   echo $PREV_RPFILT > /proc/sys/net/ipv4/conf/"$IF"/rp_filter
#   echo "changed rp_filter back to: $PREV_RPFILT"
#fi
##########################################
# Act on result
####################
if [ "$wg_failed" -eq "1" ]; then
   service "restart_wgc $1" >/dev/null 2>&1
else
   echo "$IF tests succeeded, no action needed"
#        if ! cru l | grep "RebootCron"
#            then
#                MIN=`date +"%M"` # Get current minutes
#                cru a RebootCron "$MIN * * * * reboot" #Create cron job to restart router in 60 min
#                logger -t $(basename $0) "Initiating Reboot Timer - system will reboot in 1 hour if internet is not reconnected"
#        fi
#    else
#	if cru l | grep "RebootCron"
#  	   then
#  		cru d RebootCron
#		logger -t $(basename $0) "Internet ok again - Removing Reboot Timer"
#	fi
fi
###########################################
